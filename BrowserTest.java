/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.ArrayList;
import java.util.List;

import com.beust.jcommander.Parameter;
import com.codeborne.selenide.Configuration;
import org.junit.Before;
import org.testng.annotations.*;
import registration.RegistrationPage1;
import registration.RegistrationPage2;


public class BrowserTest {

    /*RegistrationPage1 page1;
    RegistrationPage2 page2;*/

    /*@BeforeGroups("group1")
    public void BeforeGroup1(){
        System.out.println("Before group1");
    }
    @AfterGroups("group1")
    public void AfterGroup1(){
        System.out.println("After group1");
    }
    @BeforeGroups("group2")
    public void BeforeGroup2(){
        System.out.println("Before group2");
    }
    @AfterGroups("group2")
    public void AfterGroup2(){
        System.out.println("After group2");
    }
    @BeforeGroups("group2")
    public void BeforeGroup12(){
        System.out.println("Before group1 and group2");
    }
    @AfterGroups("group2")
    public void AfterGroup12(){
        System.out.println("After group1 and group2");
    }
    @BeforeMethod(enabled = false)
    public void BeforeMethod(){
        System.out.println("Before Method");
    }
    @AfterMethod(enabled = false)
    public void AfterMethod1(){
        System.out.println("After Method");
    }
    @BeforeSuite
    public void BeforeSuite1(){
        System.out.println("Before Suite");
    }
    @AfterSuite
    public void AfterSuite1(){
        System.out.println("After Suite");
    }
    @BeforeClass
    public void BeforeClass1(){
        System.out.println("Before Class\n");
    }
    @AfterClass
    public void AfterClass1(){
        System.out.println("\nAfter Class");
    }
    @BeforeTest
    public void BeforeTest1(){
        System.out.println("Before Test");
    }
    @AfterTest
    public void AfterTest1(){
        System.out.println("After Test");
    }
    @Test(groups = {"group1"})
    public void Group1Test1(){
        System.out.println("Test from group1");
    }
    @Test(dependsOnMethods = "Group1Test1", groups = {"group2"})
    public void Group2Test1(){
        System.out.println("Test from group2");
    }
    @DataProvider(name = "getSomeString")
    public Object[] getSomeString(){

        return new Object[]{"tell","tell2","tell3"};
    }
    @Test(dataProvider = "getSomeString")
    public void Group12Test1(String Text1){
        System.out.println("Test from group1 and group2");
        System.out.println(Text1);
    }*/

    /*@BeforeClass(enabled = false)
    public void test(){
        Configuration.browser="chrome";
        Configuration.headless=false;
        page1 = new RegistrationPage1();
    }
    @Test(enabled = false)
    public void Registration1(){
        page1.registration("Oles", "Ivanov", 23, 3, 2000, "man");
        page2.registration("Ukraine", "88005553535");
    }
    @Test(enabled = false)
    public void Registration2(){
        page2.registration("Ukraine", "88005553535");
    }*/

    @Test
    public void Execution() {
        List<String> result = new ArrayList();
        result = MakeDate("2018-08-01", 3);
        System.out.println(result);
        result = MakeDate("2018-08-28", 3);
        System.out.println(result);
        result = MakeDate("2018-01-02", 4);
        System.out.println(result);
        result = MakeDate("2018-12-27", 4);
        System.out.println(result);
    }

    public List<String> MakeDate(String Date, int count) {
        int day, month, year;
        String resultStr;
        List<String> test = new ArrayList();
        year = Integer.parseInt(Date.substring(0, 4));
        month = Integer.parseInt(Date.substring(5, 7));
        day = Integer.parseInt(Date.substring(8, 10));
        //System.out.println("\nYour date: " + year + "-" + month + "-" + day + "\n");
        if ((day <= 0) || (day > 28) || (month <= 0) || (month > 12)){
            //System.out.println("\nYour date is not correct!");
            return test;
        }
        for (int i = count; i > 0; i--) {
            if ((day - i) < 1) {
                if (month == 1) {
                    resultStr = BuildData((year - 1), 12, (28 - (i - day)));
                    //System.out.println(resultStr);
                    test.add(resultStr);
                }
                else {
                    resultStr = BuildData(year, (month - 1), (28 - (i - day)));
                    //System.out.println(resultStr);
                    test.add(resultStr);
                }
            }
            else {
                resultStr = BuildData(year, month, (day - i));
                //System.out.println(resultStr);
                test.add(resultStr);
            }
        }
        test.add(Date);
        //System.out.println(Date);
        for (int i = 1; i <= count; i++) {
            if ((day + i) > 28) {
                if (month == 12) {
                    resultStr = BuildData((year + 1), 1, (i - (28 - day)));
                    //System.out.println(resultStr);
                    test.add(resultStr);
                }
                else {
                    resultStr = BuildData(year, (month + 1), (i - (28 - day)));
                    //System.out.println(resultStr);
                    test.add(resultStr);
                }
            }
            else {
                resultStr = BuildData(year, month, (day + i));
                //System.out.println(resultStr);
                test.add(resultStr);
            }
        }
        return test;
    }

    public String BuildData(int year, int month, int day) {
        String resultStr;
        if ((month < 10) && (day < 10)) {
            resultStr = String.valueOf(year) + "-0" + String.valueOf(month) + "-0" + String.valueOf(day);
            return resultStr;
        }
        if (month < 10) {
            resultStr = String.valueOf(year) + "-0" + String.valueOf(month) + "-" + String.valueOf(day);
            return resultStr;
        }
        if (day < 10) {
            resultStr = String.valueOf(year) + "-" + String.valueOf(month) + "-0" + String.valueOf(day);
            return resultStr;
        }
        resultStr = String.valueOf(year) + "-" + String.valueOf(month) + "-" + String.valueOf(day);
        return resultStr;
    }
}